'use strict'

const test = require('tape')
const fs = require('../src/super-fs')
const resolve = require('path').resolve
const convert = require('../src/convert.js')

function testStr (opts) {
  return `"
" ${opts.name} v1.0.0
" testing estilo
" https://github.com/jacoborus/estilo#readme
" author: Jacobo
" license: MIT
"
" This file was generated by Estilo
" https://github.com/jacoborus/estilo

let g:colors_name="${opts.name}"
hi clear
if exists("syntax_on")
  syntax reset
endif
if has("gui_running")
  set background=${opts.background}
endif

hi ColorColumn guifg=#${opts.hex} ctermfg=${opts.xterm} guibg=#${opts.hex} ctermbg=${opts.xterm} gui=Bold,Italic,reverse,underline cterm=Bold,Italic,reverse,underline
hi Comment guifg=#${opts.hex} ctermfg=${opts.xterm} guibg=#${opts.hex} ctermbg=${opts.xterm} gui=Bold,Italic,reverse,underline cterm=Bold,Italic,reverse,underline
hi jsonPadding guifg=#${opts.hex} ctermfg=${opts.xterm} guibg=#${opts.hex} ctermbg=${opts.xterm} gui=Bold,Italic,reverse,underline cterm=Bold,Italic,reverse,underline\n`
}

const first = {
  name: 'my-scheme',
  background: 'dark',
  hex: 'bbddff',
  xterm: '153'
}

const second = {
  name: 'variant',
  background: 'light',
  hex: '0044ff',
  xterm: '27'
}

test('build', t => {
  fs.rmrf('./test/sandbox/colors')
  convert(resolve('./test/sandbox'), function () {
    const firstStr = fs.readFileSync('./test/sandbox/colors/my-scheme.vim', 'utf-8')
    t.is(firstStr, testStr(first))
    const secondStr = fs.readFileSync('./test/sandbox/colors/variant.vim', 'utf-8')
    t.is(secondStr, testStr(second))
    fs.unlink('./test/sandbox/colors/my-scheme.vim', () => {
      fs.unlink('./test/sandbox/colors/variant.vim', () => {
        t.end()
      })
    })
  })
})
